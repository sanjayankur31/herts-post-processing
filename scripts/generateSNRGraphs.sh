#!/bin/bash

# Copyright 2015 Ankur Sinha 
# Author: Ankur Sinha <sanjay DOT ankur AT gmail DOT com> 
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# File : ../scripts/generateSNRGraphs.sh
# 
# This script needs to be run after the main postprocess_single program has
# been run. It takes the files that each rank produces, puts them together and
# runs gnuplot to give me my pretty graphs.
#

GENERATE_SNR="no"
FORMAT="png"

function default ()
{
    if [ "xyes" == x"$GENERATE_SNR" ]
    then
        if [ "xpng" == x"$FORMAT" ]
        gnuplot -e "set output \"SNR.png\"; set term png font \"/usr/share/fonts/dejavu/DejaVuSans.ttf,30\" size 2880,1440 ; 
}

function usage ()
{
    cat << EOF
usage: $0 options

Graph generator script - this does not process data - it only graphs images
from data files that have already been generated by the postprocessing scripts.

OPTIONS:
    -h  Show this message and exit
    -s  Generate master SNR graph (default: $GENERATE_SNR)
EOF
}


function run()
{
    while getopts "hp:rs:m:tPDe:" OPTION
    do
        case $OPTION in
            s)
                GENERATE_SNR="yes"
                ;;
            f) 
                FORMAT=$OPTARG
                ;;
            h)
                usage
                exit 1
                ;;
            ?)
                usage
                exit 1
                ;;
        esac
    done

    default
}

# MAIN CALLS

# check for tmux
which gnuplot > /dev/null 2>&1
if [ 0 -ne "$?" ]
then
    echo "[ERROR] Gnuplot found on this machine. Exiting." 
    exit -1
else
    echo "[INFO] Gnuplot found on this machine. Generating graphs and things."
fi

NUMARGS=$#
echo "[INFO] Number of arguments: $NUMARGS"
if [ $NUMARGS -eq 0 ]; then
    echo "[INFO] No arguments received. Running with default configuration. Use -h to see usage help."

    default
    exit 0
else
    run "$@"
fi

